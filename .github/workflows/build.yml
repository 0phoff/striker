name: Build
on: [push, pull_request]

jobs:
  ######################################
  # JOB
  # Linting
  ######################################
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
          cache: pip

      - name: Install poetry
        run: python -m pip install poetry==1.2.2

      - name: Poetry dependencies
        run: |
          poetry self add "poetry-dynamic-versioning[plugin]"
          poetry install --all-extras

      - name: Flake8
        run: poetry run flake8

      - name: MyPy
        run: poetry run mypy striker


  ######################################
  # JOB
  # Build Wheel and Source
  ######################################
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
          cache: pip

      - name: Install poetry
        run: python -m pip install poetry==1.2.2

      - name: Poetry dependencies
        run: |
          poetry self add "poetry-dynamic-versioning[plugin]"
          poetry install --all-extras

      - name: Build wheel
        run: poetry build

      - name: Store artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-artifact
          path: dist/*


  ######################################
  # JOB
  # Upload Test PyPI
  ######################################
  upload_test_pypi:
    name: Upload Test PyPI Servers
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/heads/master')

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-artifact
          path: dist

      - name: Upload PyPI
        uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          user: __token__
          password: ${{ secrets.PYPI_TEST_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
          skip_existing: true
          verbose: true


  ######################################
  # JOB
  # Upload PyPI
  ######################################
  upload_pypi:
    name: Upload PyPI Servers
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-artifact
          path: dist

      - name: Upload PyPI
        uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          verbose: true


  ######################################
  # JOB
  # Test PyPi installation
  ######################################
  test_installation:
    name: Test Wheel
    runs-on: ${{ matrix.os }}
    needs: [upload_test_pypi]
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python: ["3.9", "3.10", "3.11"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
          cache: pip

      - name: Install package
        run: |
          python -m pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple striker
      - name: Run package
        run: |
          python -c "import striker; print(f'Striker Version {striker.__version__}')"
